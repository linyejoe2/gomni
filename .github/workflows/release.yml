name: Release Gomni

on:
  push:
    tags:
      - 'v*' # 這裡會針對所有符合 v* 的 tag 進行處理，比如 v0.1.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23' # 修改為你專案使用的 Go 版本

      # 3. Build the Go project
      - name: Build project
        run: |
          go mod tidy
          go build -o gomni # 假設你的 main package 在 ./cmd/gomni

      # 4. Create zip archive of the binary
      - name: Create zip archive
        run: zip gomni-v${{ github.ref_name }}.zip gomni

      # 1. Create a release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }} # v0.1.0
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      # 5. Upload Release Assets
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: gomni-v${{ github.ref_name }}.zip
          asset_name: gomni-v${{ github.ref_name }}.zip
          asset_content_type: application/zip

